/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 8
#include <orb/orbit.h>

#ifdef __cplusplus
extern "C" {
#endif				/* __cplusplus */

/* Begin CORBA module Alliance */

/* Begin interface Alliance_IOSK */

   /* client-side data structures and methods */
#ifndef _Alliance_IOSK_defined
#define _Alliance_IOSK_defined

   typedef CORBA_Object Alliance_IOSK;
#define Alliance_IOSK__free CORBA_Object__free
#endif				/* !_Alliance_IOSK_defined */

   extern CORBA_unsigned_long Alliance_IOSK__classid;
   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK;
#ifndef _Alliance_IOSK_Caller_defined
#define _Alliance_IOSK_Caller_defined

   typedef CORBA_unsigned_long_long Alliance_IOSK_Caller;
#endif				/* !_Alliance_IOSK_Caller_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_Caller_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_Caller;
   extern Alliance_IOSK_Caller *Alliance_IOSK_Caller__alloc(void);
#define Alliance_IOSK_Caller__free CORBA_unsigned_long_long__free

#ifndef _Alliance_IOSK_Session_defined
#define _Alliance_IOSK_Session_defined

   typedef CORBA_unsigned_long Alliance_IOSK_Session;
#endif				/* !_Alliance_IOSK_Session_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_Session_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_Session;
   extern Alliance_IOSK_Session *Alliance_IOSK_Session__alloc(void);
#define Alliance_IOSK_Session__free CORBA_unsigned_long__free

#ifndef _Alliance_IOSK_Address_defined
#define _Alliance_IOSK_Address_defined

   typedef CORBA_unsigned_long_long Alliance_IOSK_Address;
#endif				/* !_Alliance_IOSK_Address_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_Address_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_Address;
   extern Alliance_IOSK_Address *Alliance_IOSK_Address__alloc(void);
#define Alliance_IOSK_Address__free CORBA_unsigned_long_long__free

#ifndef _Alliance_IOSK_bytes_defined
#define _Alliance_IOSK_bytes_defined

   typedef struct {
      CORBA_unsigned_long _maximum;
      CORBA_unsigned_long _length;
      CORBA_octet *_buffer;
      CORBA_boolean _release:1;	/* ORBit-specific; see page 19-14 of CORBA 2.2 spec */
   } Alliance_IOSK_bytes;
#endif				/* !_Alliance_IOSK_bytes_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_bytes_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_bytes;
   extern CORBA_octet *CORBA_sequence_CORBA_octet_allocbuf(CORBA_unsigned_long len);
   extern Alliance_IOSK_bytes *Alliance_IOSK_bytes__alloc(void);
   extern gpointer Alliance_IOSK_bytes__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internals */

#ifndef _Alliance_IOSK_strings_defined
#define _Alliance_IOSK_strings_defined

   typedef struct {
      CORBA_unsigned_long _maximum;
      CORBA_unsigned_long _length;
      CORBA_char **_buffer;
      CORBA_boolean _release:1;	/* ORBit-specific; see page 19-14 of CORBA 2.2 spec */
   } Alliance_IOSK_strings;
#endif				/* !_Alliance_IOSK_strings_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_strings_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_strings;
   extern CORBA_char **CORBA_sequence_CORBA_string_allocbuf(CORBA_unsigned_long len);
   extern Alliance_IOSK_strings *Alliance_IOSK_strings__alloc(void);
   extern gpointer Alliance_IOSK_strings__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);		/* ORBit internals */

#ifndef _Alliance_IOSK_SeekDir_defined
#define _Alliance_IOSK_SeekDir_defined

   typedef enum {
      Alliance_IOSK_Begin,
      Alliance_IOSK_End,
      Alliance_IOSK_Forward,
      Alliance_IOSK_Back
   } Alliance_IOSK_SeekDir;
#endif				/* !_Alliance_IOSK_SeekDir_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_SeekDir_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_SeekDir;

#ifndef _Alliance_IOSK_Permission_defined
#define _Alliance_IOSK_Permission_defined

   typedef enum {
      Alliance_IOSK_RW,
      Alliance_IOSK_RO,
      Alliance_IOSK_WO,
      Alliance_IOSK_UNDEF
   } Alliance_IOSK_Permission;
#endif				/* !_Alliance_IOSK_Permission_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_Permission_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_Permission;

#ifndef _Alliance_IOSK_BadDevice_defined
#define _Alliance_IOSK_BadDevice_defined

   typedef struct Alliance_IOSK_BadDevice {
      CORBA_char *desc;

   } Alliance_IOSK_BadDevice;
#define ex_Alliance_IOSK_BadDevice "IDL:Alliance/IOSK/BadDevice:1.0"
#endif				/* !_Alliance_IOSK_BadDevice_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_BadDevice_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_BadDevice;
   extern Alliance_IOSK_BadDevice *Alliance_IOSK_BadDevice__alloc(void);
   extern gpointer Alliance_IOSK_BadDevice__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internals */

#ifndef _Alliance_IOSK_BadHandle_defined
#define _Alliance_IOSK_BadHandle_defined

   typedef struct Alliance_IOSK_BadHandle {
      CORBA_char *desc;

   } Alliance_IOSK_BadHandle;
#define ex_Alliance_IOSK_BadHandle "IDL:Alliance/IOSK/BadHandle:1.0"
#endif				/* !_Alliance_IOSK_BadHandle_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_BadHandle_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_BadHandle;
   extern Alliance_IOSK_BadHandle *Alliance_IOSK_BadHandle__alloc(void);
   extern gpointer Alliance_IOSK_BadHandle__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internals */

#ifndef _Alliance_IOSK_BadAddress_defined
#define _Alliance_IOSK_BadAddress_defined

   typedef struct Alliance_IOSK_BadAddress {
      CORBA_char *desc;

   } Alliance_IOSK_BadAddress;
#define ex_Alliance_IOSK_BadAddress "IDL:Alliance/IOSK/BadAddress:1.0"
#endif				/* !_Alliance_IOSK_BadAddress_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_BadAddress_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_BadAddress;
   extern Alliance_IOSK_BadAddress *Alliance_IOSK_BadAddress__alloc(void);
   extern gpointer Alliance_IOSK_BadAddress__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internals */

#ifndef _Alliance_IOSK_BadRead_defined
#define _Alliance_IOSK_BadRead_defined

   typedef struct Alliance_IOSK_BadRead {
      CORBA_char *desc;

   } Alliance_IOSK_BadRead;
#define ex_Alliance_IOSK_BadRead "IDL:Alliance/IOSK/BadRead:1.0"
#endif				/* !_Alliance_IOSK_BadRead_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_BadRead_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_BadRead;
   extern Alliance_IOSK_BadRead *Alliance_IOSK_BadRead__alloc(void);
   extern gpointer Alliance_IOSK_BadRead__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);		/* ORBit internals */

#ifndef _Alliance_IOSK_BadWrite_defined
#define _Alliance_IOSK_BadWrite_defined

   typedef struct Alliance_IOSK_BadWrite {
      CORBA_char *desc;

   } Alliance_IOSK_BadWrite;
#define ex_Alliance_IOSK_BadWrite "IDL:Alliance/IOSK/BadWrite:1.0"
#endif				/* !_Alliance_IOSK_BadWrite_defined */

   extern const struct CORBA_TypeCode_struct TC_Alliance_IOSK_BadWrite_struct;
   extern const CORBA_TypeCode TC_Alliance_IOSK_BadWrite;
   extern Alliance_IOSK_BadWrite *Alliance_IOSK_BadWrite__alloc(void);
   extern gpointer Alliance_IOSK_BadWrite__free(gpointer mem, gpointer dat, CORBA_boolean free_strings);	/* ORBit internals */

   extern Alliance_IOSK_Session Alliance_IOSK_openSession(Alliance_IOSK _obj, CORBA_char * device, Alliance_IOSK_Permission permission, CORBA_Environment * ev);

   extern void Alliance_IOSK_closeSession(Alliance_IOSK _obj, Alliance_IOSK_Session id, CORBA_Environment * ev);

   extern Alliance_IOSK_bytes *Alliance_IOSK_read(Alliance_IOSK _obj, Alliance_IOSK_Session id, CORBA_unsigned_long * length, CORBA_boolean block, CORBA_Environment * ev);

   extern void Alliance_IOSK_write(Alliance_IOSK _obj, Alliance_IOSK_Session id, Alliance_IOSK_bytes * buffer, CORBA_Environment * ev);

   extern void Alliance_IOSK_writeAsync(Alliance_IOSK _obj, Alliance_IOSK_Session id, Alliance_IOSK_bytes * buffer, CORBA_Environment * ev);

   extern void Alliance_IOSK_readSeek(Alliance_IOSK _obj, Alliance_IOSK_Session id, Alliance_IOSK_Address where, Alliance_IOSK_SeekDir dir, CORBA_Environment * ev);

   extern void Alliance_IOSK_writeSeek(Alliance_IOSK _obj, Alliance_IOSK_Session id, Alliance_IOSK_Address where, Alliance_IOSK_SeekDir dir, CORBA_Environment * ev);

   extern void Alliance_IOSK_lock(Alliance_IOSK _obj, Alliance_IOSK_Session id, Alliance_IOSK_Permission permission, CORBA_Environment * ev);

   /* server-side (via the POA) data structures and methods */
#ifndef _POA_Alliance_IOSK__epv_defined
#define _POA_Alliance_IOSK__epv_defined

   typedef struct {
      void *_private;
       Alliance_IOSK_Session(*openSession) (PortableServer_Servant servant, CORBA_char * device, Alliance_IOSK_Permission permission, CORBA_Environment * ev);
      void (*closeSession) (PortableServer_Servant servant, Alliance_IOSK_Session id, CORBA_Environment * ev);
      Alliance_IOSK_bytes *(*read) (PortableServer_Servant servant, Alliance_IOSK_Session id, CORBA_unsigned_long * length, CORBA_boolean block, CORBA_Environment * ev);
      void (*write) (PortableServer_Servant servant, Alliance_IOSK_Session id, Alliance_IOSK_bytes * buffer, CORBA_Environment * ev);
      void (*writeAsync) (PortableServer_Servant servant, Alliance_IOSK_Session id, Alliance_IOSK_bytes * buffer, CORBA_Environment * ev);
      void (*readSeek) (PortableServer_Servant servant, Alliance_IOSK_Session id, Alliance_IOSK_Address where, Alliance_IOSK_SeekDir dir, CORBA_Environment * ev);
      void (*writeSeek) (PortableServer_Servant servant, Alliance_IOSK_Session id, Alliance_IOSK_Address where, Alliance_IOSK_SeekDir dir, CORBA_Environment * ev);
      void (*lock) (PortableServer_Servant servant, Alliance_IOSK_Session id, Alliance_IOSK_Permission permission, CORBA_Environment * ev);
   } POA_Alliance_IOSK__epv;
#endif				/* !_POA_Alliance_IOSK__epv_defined */

#ifndef _POA_Alliance_IOSK__vepv_defined
#define _POA_Alliance_IOSK__vepv_defined

   typedef struct {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Alliance_IOSK__epv *Alliance_IOSK_epv;
   } POA_Alliance_IOSK__vepv;
#endif				/* !_POA_Alliance_IOSK__vepv_defined */

#ifndef _POA_Alliance_IOSK_defined
#define _POA_Alliance_IOSK_defined

   typedef struct {
      void *_private;
      POA_Alliance_IOSK__vepv *vepv;
   } POA_Alliance_IOSK;
#endif				/* !_POA_Alliance_IOSK_defined */

   extern void POA_Alliance_IOSK__init(POA_Alliance_IOSK * servant, CORBA_Environment * ev);
   extern void POA_Alliance_IOSK__fini(POA_Alliance_IOSK * servant, CORBA_Environment * ev);
/* End interface Alliance_IOSK */

/* End CORBA module Alliance */

#ifdef __cplusplus
}

#endif				/* __cplusplus */
#undef ORBIT_IDL_SERIAL
